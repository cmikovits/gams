<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd">

<language version="1" kateversion="5.0" name="GAMS Script" section="Scientific" extensions="*.gms;*.gams" mimetype="" license="GPLv2" casesensitive="no">
<highlighting>

	<list name="controls">
		<item>set</item>
    <item>sets</item>
		<item>table</item>
		<item>parameter</item>
		<item>parameters</item>
		<item>model</item>
		<item>solve</item>
		<item>equation</item>
		<item>equations</item>
		<item>variable</item>
		<item>variables</item>
    <item>display</item>
		<item>option</item>
		<item>alias</item>
		<item>scalar</item>
		<item>sameas</item>
		<item>xxpto</item>
		<item>free</item>
		<item>positive</item>
    <item>negative</item>
		<item>put</item>
		<item>putclose</item>
    <item>file</item>
		<item>putpage</item>
    <item>puttl</item>
		<item>puthd</item>
    <item>abort</item>
    <item>semicont</item>
    <item>semiint</item>
    <item>sos1</item>
    <item>sos2</item>
    <item>binary</item>
    <item>integer</item>
  </list>
  <list name="controlflow">
		<item>loop</item>
		<item>while</item>
		<item>repeat</item>
		<item>until</item>
		<item>if</item>
		<item>else</item>
		<item>elseif</item>
		<item>ifi</item>
    <item>for</item>
		<item>to</item>
		<item>downto</item>
		<item>by</item>
  </list>
  <list name="builtin">
    <item>eq</item>
		<item>ne</item>
		<item>gt</item>
		<item>ge</item>
		<item>lt</item>
		<item>le</item>
		<item>eqv</item>
    <item>imp</item>
		<item>ne</item>
		<item>gt</item>
		<item>ge</item>
		<item>lt</item>
		<item>le</item>
		<item>eqv</item>
    <item>imp</item>
	</list>
	<list name="words">
		<item>TRUE</item>
		<item>FALSE</item>
		<item>NULL</item>
		<item>NA</item>
		<item>NA_integer_</item>
		<item>NA_real_</item>
		<item>NA_complex_</item>
		<item>NA_character_</item>
		<item>Inf</item>
		<item>NaN</item>
	</list>
  <list name="functions">
    <item>abs</item>
		<item>asc</item>
		<item>sigmoid</item>
		<item>sum</item>
		<item>acos</item>
		<item>asin</item>
		<item>asinh</item>
		<item>atan</item>
		<item>atan2</item>
    <item>atanh</item>
		<item>ceil</item>
		<item>ctime</item>
		<item>cos</item>
		<item>cosh</item>
		<item>exp</item>
		<item>floor</item>
		<item>log</item>
		<item>log10</item>
    <item>max</item>
		<item>min</item>
		<item>precision</item>
		<item>round</item>
		<item>sin</item>
		<item>sinh</item>
		<item>sqrt</item>
		<item>tan</item>
		<item>tanh</item>
    <item>smax</item>
		<item>smin</item>
		<item>time</item>
		<item>trunc</item>
		<item>dic</item>
		<item>beta</item>
		<item>betareg</item>
		<item>binominal</item>
		<item>edist</item>
    <item>entropy</item>
		<item>errorf</item>
		<item>fact</item>
		<item>gamma</item>
		<item>gammareg</item>
		<item>logbeta</item>
		<item>loggamma</item>
		<item>normal</item>
    <item>mapval</item>
		<item>mod</item>
		<item>ncpcm</item>
		<item>ncpf</item>
		<item>pi</item>
		<item>poly</item>
		<item>power</item>
		<item>sign</item>
		<item>signpower</item>
    <item>trunc</item>
		<item>uniform</item>
		<item>uniformint</item>
  </list>

	<contexts>
		<!-- This context is really only good for detecting unexpected closing braces '}'. Since opening braces go to ctx0 (and nesting in there), this context is only active on the base level -->
		<context attribute="Normal Text" lineEndContext="#stay" name="level0">
			<IncludeRules context="CommonRules"/>

			<DetectChar attribute="Error" context="#stay" char="}" />
			<DetectChar attribute="Error" context="#stay" char=")"/>
		</context>

		<context attribute="Normal Text" lineEndContext="#stay" name="ctx0">
			<IncludeRules context="CommonRules"/>

			<DetectChar attribute="Symbol" context="#pop" char="}" endRegion="Brace1" />
			<DetectChar attribute="Error" context="#stay" char=")"/>
		</context>

		<context attribute="Normal Text" lineEndContext="#stay" name="parenthesis">
			<LineContinue attribute="Operator" context="#stay"/>
			<DetectChar attribute="Symbol" context="#pop" char=")"/>

			<RegExpr attribute="Identifier" context="#stay" String="[a-zA-Z_\.][0-9a-zA-Z_\.]*[\s]*[:]?=(?=([^=]))"/>

			<IncludeRules context="CommonRules"/>
			<DetectChar attribute="Error" context="#stay" char="}" />
		</context>

		<context attribute="String" lineEndContext="#stay" name="string">
			<DetectChar attribute="String" context="#pop" char="&quot;"/>
			<HlCStringChar attribute="String Char" context="#stay"/>
		</context>

		<context attribute="String" lineEndContext="#stay" name="string2">
			<DetectChar attribute="String" context="#pop" char="'"/>
			<HlCStringChar attribute="String Char" context="#stay"/>
		</context>

		<context attribute="Identifier" lineEndContext="#stay" name="backquotedsymbol">
			<DetectChar attribute="String" context="#pop" char="`"/>
			<HlCStringChar attribute="String Char" context="#stay"/>
		</context>

		<context attribute="Normal Text" lineEndContext="#stay" name="operator_rhs" fallthrough="true" fallthroughContext="#pop">
			<!-- While there is nothing of interest, stay in the context -->
			<Detect2Chars attribute="Headline" context="Headline" char="*" char1="*"/>
			<DetectChar attribute="Comment" context="Comment" char="*"/>
			<DetectChar attribute="String" context="#stay" char=" "/>
			<!-- Operators other than +, -, and ! directly after another operator are an error. -->
			<RegExpr attribute="Error" context="#stay" String="(\*|/|&lt;|&gt;|\!=|=|\||&amp;|:|\^|@|~)"/>
		</context>

		<context attribute="Headline" lineEndContext="#pop" name="Headline">
			<IncludeRules context="##Alerts" />
		</context>
		<context attribute="Comment" lineEndContext="#pop" name="Comment">
			<IncludeRules context="##Alerts" />
		</context>

		<!-- This context is not really used, but contains the common rules -->
		<context name="CommonRules" lineEndContext="#stay" attribute="Normal Text" >
			<DetectChar attribute="String" context="string" char="&quot;"/>
			<DetectChar attribute="String" context="string2" char="'"/>
			<DetectChar attribute="String" context="backquotedsymbol" char="`"/>
			<keyword attribute="Control Structure" context="#stay" String="controls"/>
			<keyword attribute="Reserved Words" context="#stay" String="words"/>
			<Float attribute="Float" context="#stay"/>
			<Int attribute="Int" context="#stay"/>
			<RegExpr attribute="Keyword" context="#stay" String="[a-zA-Z_]+[a-zA-Z_\.0-9]*(?=[\s]*[(])"/>
			<RegExpr attribute="Keyword" context="#stay" String="\.[a-zA-Z_\.]+[a-zA-Z_\.0-9]*(?=[\s]*[(])"/>
			<DetectChar attribute="Symbol" context="parenthesis" char="("/>
			<Detect2Chars attribute="Headline" context="Headline" char="#" char1="#"/>
			<DetectChar attribute="Comment" context="Comment" char="#"/>

			<!-- For (assignment) operators, enter a new context operator_rhs to check what follows (generally, that should not be another op) -->
			<RegExpr attribute="Assign" context="operator_rhs" String="[&lt;]{1,2}\-"/>
			<RegExpr attribute="Assign" context="operator_rhs" String="\-[&gt;]{1,2}"/>
			<RegExpr attribute="Assign" context="operator_rhs" String="=(?!=)"/>
			<RegExpr attribute="Operator" context="operator_rhs" String="(\+|\-|/|&lt;=?|&gt;=?|={1,2}|\!=?|\|{1,2}|&amp;{1,2}|:{1,3}|\^|@|~)"/>
			<RegExpr attribute="Operator" context="operator_rhs" String="%[^%]*%"/>

			<DetectChar attribute="Symbol" context="ctx0" char="{" beginRegion="Brace1" />

			<!-- This is needed only to assist variable based indentation -->
			<DetectChar attribute="Symbol" context="#stay" char="[" />
			<DetectChar attribute="Symbol" context="#stay" char="]" />
		</context>
	</contexts>

	<itemDatas>
		<!-- KDE default colors: http://accessibility.kde.org/oxygen.php?color=white -->
		<itemData name="Normal Text" defStyleNum="dsNormal"/>
		<itemData name="Symbol" defStyleNum="dsNormal"/>
		<itemData name="Keyword" defStyleNum="dsKeyword"/>
		<itemData name="Identifier" defStyleNum="dsDataType"/>
		<itemData name="String" defStyleNum="dsString"/>
		<itemData name="Headline" defStyleNum="dsComment" color="#b00000" selColor="#b00000" bold="1" italic="0"/> <!-- KDE default color: text 5 -->
		<itemData name="Comment" defStyleNum="dsComment"/>
		<itemData name="Assign" defStyleNum="dsNormal" color="#336366" selColor="#ccc099" bold="1" italic="0"/> <!-- KDE default color: text 7 -->
		<itemData name="Control Structure" defStyleNum="dsControlFlow"/>
		<itemData name="Reserved Words" defStyleNum="dsOthers"/>
		<itemData name="Error" defStyleNum="dsError"/>
		<itemData name="Operator" defStyleNum="dsOperator"/>
		<itemData name="String Char"  defStyleNum="dsChar"/>
		<itemData name="Float" defStyleNum="dsFloat"/>
		<itemData name="Int" defStyleNum="dsDecVal"/>
	</itemDatas>
</highlighting>

<general>
	<comments>
		<comment name="singleLine" start="*" end=""/>
	</comments>
</general>
</language>
